= Jak p≈ôed√°vat data =

Vzhledem k tomu, ≈æe se v djvu souborech mohou vyskytovat i str√°nky s opakovan√Ωmi mezerami, je t≈ôeba na to pamatovat p≈ôi pr√°ci na p≈ô√≠kazov√© ≈ô√°dce a v takov√©m p≈ô√≠padƒõ pou≈æ√≠t znak '\' (''backslash'')


= Funkce =
:* comparedjvu
	''potvrdit''
:* deletepage
	''identifybundle''
	''identifypage''
:* djvuinfo
	''identifybundle''
	''lastpage''
	?''exportpage''
:* export
	''targetdir''
	''identifypage''
	''identifyname''
::* exportdjvuall
	''exportdjvupage''
		''pushd''
		''popd''
		''potvrdit''
	''exportdsedpage''
		''pushd'
		''popd'''
		''potvrdit''
	''exportxmlpage''
		''pushd''
		''popd''
		''identifypage''
		''potvrdit''
	''exportdsedbundle''
		''pushd''
		''popd''
		''potvrdit''
	''exportxmlbundle''
		''pushd''
		''popd''
		''potvrdit''
	''identifyname''
	''identifypage''
	''targetdir''
	''exportimgpage''
		''pushd''
		''popd''
		''identifypage''
		''potvrdit''
:::* exportdjvupage
	''pushd''
	''popd''
	''potvrdit''
:::* exportdsedbundle
	''pushd''
	''popd''
	''potvrdit''
:::* exportdsedpage
	''pushd''
	''popd''
	''potvrdit''
:::* exportimgpage
	''pushd''
	''popd''
	''identifypage''
	''potvrdit''
# exportmetabundle
# exportmetapage
:* exportoutline
	''help''
:::* exportxmlbundle
	''pushd''
	''popd''
	''potvrdit''
:::* exportxmlpage
	''pushd''
	''popd''
	''identifypage''
	''potvrdit''
::* filetodjvu
	''todjvu''
		''testfile''
		''potvrdit''
			''getocr''
::* getocr
:* help
::* identifybundle
	''testfile''
::* identifyname
::* identifypage
:* import
	''list''
	''importdsedpage''
	''importxmlpage''
	''importmetapage''
	''importmetaall''
	''importoutline''
		''tabs''
::* importdsedpage
::* importmetaall
::* importmetapage
::* importoutline
	''tabs''
::* importxmlpage
:* lastpage
:* list
:* log
* main
	''help''
	''log''
	''testfile''
	''deletepage''
		''identifybundle''
			''testfile''
		''identifypage''
	'''todjvu'''
	'''insertpage'''
	'''setmeta'''
	'''printmeta'''
	'''unsetmeta'''
	''move''
		''identifypage''
		''identifyname''
		''exportdjvupage''
		''deletepage''
			''identifybundle''
			''identifypage''
		''comparedjvu''
			''potvrdit''
		''filetodjvu''
			''todjvu''
				''testfile''
				''potvrdit''
				''getocr''
	''rotatepage''
		''identifybundle''
			''testfile''
		''potvrdit''
		''identifyname''
	''export''
		'':targetdir''
		''identifyname''
		''identifypage''
		''exportdjvuall''
			''exportoutline''
				''help''
	''import''
		''list''
		''importdsedpage''
		''importxmlpage''
		''importmetapage''
		''importmetaall''
		''importoutline''
			''parseoutline''
			''tabs''
	''djvuinfo''
		''identifybundle''
		''lastpage''
		?''exportpage''
	''list''
	''exportoutline''
		''help''
:* move
	''identifypage''
	''identifyname''
	''exportdjvupage''
		''identifybundle''
		''identifypage''
	''filetodjvu''
		''todjvu''
			''testfile''
			''potvrdit''
			''getocr''
:::* parseoutline
:::* popd
::* potvrdit
# printmeta
:::* pushd
:* rotatepage
	''identifybundle''
	''potvrdit''
# setmeta
::* tabs
::* targetdir
:* testfile
:::* todjvu
	''testfile''
	''potvrdit''
	''getocr''
# todjvuclassic
# todotest
# todoview
# unsetmeta

= INFO =

Info o DjVu souboru..
indirect svazek
: exiftool nevypisuje meta atributy svazku i jeho str√°nek
: neuv√°d√≠ nic o velikosti str√°nek, rozli≈°en√≠
: uv√°d√≠ jen typ 'DJVU (multi-page'

bundle svazek
: exiftool vypisuje metaatributy 
: uv√°d√≠ subfiletype

Single page uv√°d√≠ jen DJVU

Mƒõlo by vypsat tyto informace..

#1 {jm√©no str√°nky} <orientation> <resolution> <size> 


= Jak vytvo≈ôit obsah (outline) =

N√°stroje z DjVuLibre umo≈æ≈àuj√≠ obsah DjVu svazku vyexportovat pouze v dsed form√°tu, proto tato utilita prov√°d√≠ p≈ôi importu a exportu jeho konverzi do l√©pe editovateln√© formy.

== Pojmenov√°n√≠ souboru s obsahem ==
U souboru s obsahem svazku se p≈ôedpokl√°d√°, ≈æe m√° stejn√Ω n√°zev, jako DjVu svazek, pouze s t√≠m rozd√≠lem, ≈æe m√° m√≠sto ''.djvu'' p≈ô√≠ponu ''.outline''

Je to obyƒçejn√Ω textov√Ω soubor, kter√Ω lze editovat libovoln√Ωm textov√Ωm editorem.

POZOR na tabel√°tory!!!  Pro √∫rove≈à zano≈ôen√≠ polo≈æky obsahu se toti≈æ pou≈æ√≠v√° odsazen√≠ pomoc√≠ mezer, a p≈ôi pou≈æit√≠ znaku TAB (\t) m√≠sto mezer by do≈°lo k chybn√© interpretaci souboru p≈ôi jeho importu do svazku.

Polo≈æka obsahu je v≈ædy tvo≈ôena dvƒõma textov√Ωmi ≈ôetƒõzci, uzav≈ôen√Ωmi v jednoduch√Ωch z√°vork√°ch

 "Popis obsahu" "c√≠lov√° str√°nka"

; Popis obsahu : je text, kter√Ω se vygeneruje jako polo≈æka obsahu v prohl√≠≈æeƒçi
; c√≠lov√° str√°nka : je buƒè n√°zev, nebo po≈ôadov√© ƒç√≠slo str√°nky v DjVu svazku, na kterou polo≈æka obsahu odkazuje. Aby nebylo nutn√© obsah opravovat po ka≈æd√© zmƒõnƒõ v po≈ôad√≠ str√°nek, je lep≈°√≠ z praktick√©ho hlediska v≈ædy pou≈æ√≠vat n√°zev c√≠lov√© str√°nky, m√≠sto jej√≠ho aktu√°ln√≠ho po≈ôad√≠.

Pozn√°mka: Po≈ôadov√©ho ƒç√≠slo je v≈ædy uvozeno znakem '#' (m≈ô√≠≈æka)

Nejrychlej≈°√≠m zp≈Øsob, jak z√≠skat z√°klad pro vytvo≈ôen√≠ obsahu DjVu svazku, je pou≈æ√≠t akci outline

outline order

"" "#1"
"" "#2"
...

outline name

"" "page1.djvu"
"" "page2.djvu"
...

outline print

Vyp√≠≈°e st√°vaj√≠c√≠ obsah na konzoli

outline dump

Vyexportuje st√°vaj√≠c√≠ obsah v dsed form√°tu

U str√°nek na kter√© m√° polo≈æka obsahu odkazovat p≈ôidat popisek
Vno≈ôen√≠ obsahu - odsazen√≠ mezerami, nebo tabul√°torem

A
B
C

je-li odsazen√≠ vƒõt≈°√≠, ne≈æ u p≈ôedchoz√≠ polo≈æky, dojde k zano≈ôen√≠ o dal≈°√≠ √∫rove≈à
A
  B
    C

je-li odsazen√≠ men≈°√≠, dojde k vyvo≈ôen√≠ √∫rovnƒõ..
A
 B
  C
 D

je-li hodnota odsazen√≠ stejn√°
	uzav≈ô√≠t p≈ôedchoz√≠ polo≈æku
	nastavit LEVEL na hodnotu odsazen√≠

je-li hodnota odsazen√≠ vƒõt≈°√≠
	neuzav√≠rat p≈ôedchoz√≠ polo≈æku
	nav√Ω≈°it LEVEL na hodnotu odsazen√≠

je-li hodnota odsazen√≠ men≈°√≠ o jednu jednotku..
	uzav≈ô√≠t p≈ôedchoz√≠ polo≈æku
	odeƒç√≠st jeden LEVEL
	uzav≈ô√≠t polo≈æku
	a zkontrolovat je-li LEVEL po odeƒçten√≠ na hodnotƒõ odsazen√≠..

hodnota odsazen√≠ - poƒçet mezer podle √∫rovnƒõ levelu
p≈ôi navy≈°ov√°n√≠ hodnoty odsazen√≠ pro LEVEL - (
p≈ôi sni≈æov√°n√≠ hodnoty odsazen√≠ pro LEVEL )
p≈ôi stejn√© hodnotƒõ odsazen√≠ mezery

LEVEL=0
IFS=''
while read line ; do
	NEW="${line##+( )}" && echo "${NEW}"
	TAB="${line%${NEW}}" && echo "${#TAB}"
	if [ "${#LEVEL}" -eq "${#TAB}" ] ; then
		# Odsazen√≠ se nemƒõn√≠
		echo ") ("${line}
	elif [ "${#LEVEL}" -gt "${#TAB}" ] ; then
		# Odsazen√≠ se zmen≈°ilo.. O kolik?
		COUNT=0
		while [ "${#LEVEL}" -gt "${#TAB}" ] ; then
			COUNT=$((COUNT+1))
			LEVEL=${LEVEL%${TAB}}
		done
		# 
		printf '%.s)' {0..${COUNT}} && echo '( '${line}
	else
		# Tady se m≈Ø≈æe odsazen√≠ pouze zvƒõt≈°it..
		# Odsazen√≠ se zvƒõt≈°ilo.. O kolik?
		COUNT=0
		while [ "${#TAB}" -gt "${#LEVEL}" ] ; then
			COUNT=$((COUNT+1))
			LEVEL="${LEVEL}${TABS}"
		done
		# 
		printf '%.s(' {0..${COUNT}} && echo ${line}
	fi
done < test1.outline


(A -- LEVEL=0
  (B -- LEVEL=1
    (C -- LEVEL=2
   )(D -- LEVEL=3
)


Import upraven√©ho obsahu do DjVu str√°nky
========================================

Obsah skryt√© textov√© vrstvy je ulo≈æen do dvou z√°kladn√≠ch oblast√≠:

ant
---
Obsahuje meta atributy, pozn√°mky, k obsahu, aktivn√≠ oblasti (hyperlinky)
obsah (outline - bookmarks)

txt
---
Obsahuje textov√Ω obsah

Pro √∫pravu textov√©ho obsahu je vhodn√Ω javascriptov√Ω editor ..., kter√Ω pracuje s XML souborem.
Obsah (outline, bookmarks, z√°lo≈æky) lze vytvo≈ôit p≈ôes Djvusmooth) a nebo ho naimportovat ze souboru


[1mN√°povƒõda..

Vlo≈æen√≠ znaku ESC - Ctrl+Shift+u
Form√°tov√°n√≠ v√Ωstupu
ESC[<ƒç√≠slo>m

 convertor - je konzolov√° nadstavba nad standardn√≠mi n√°stroji pro pr√°ci
             s DjVu a dal≈°√≠mi utilitami.

Co um√≠?

  * odstra≈àovat str√°nky z DjVu svazku na z√°kladƒõ jejich jm√©na nebo po≈ôad√≠
  * p≈ôesouvat DjVu str√°nky v r√°mci svazku
  * vkl√°dat do DjVu svazku str√°nky z nov√Ωch soubor≈Ø
  * konvertovat bitmapov√© soubory do djvu s aplikac√≠ OCR
  * exportovat a importovat textovou vrstvu DjVu str√°nek 
  * dekompletovat a kompletovat DjVu svazek
  * p≈ôeƒç√≠slov√°vat a p≈ôejmenov√°vat str√°nky DjVu souboru na z√°kladƒõ vzorku


[3mPou≈æit√≠ ${0##/}:

 ${0##/} [volby] {vzorek|dir/|name} docin.djvu

[1mParametry:
    docin.djvu - vstupn√≠ djvu dokument se kter√Ωm se m√° pracovat
    dir/       - jm√©no adres√°≈ôe se li≈°√≠ od jm√©na ƒçi vzorku lom√≠tkem 
    vzorek     - ≈ôetƒõzec, kter√Ωm se maj√≠ vyselektovat soubory s nimi≈æ se
                 m√° pracovat - je to ƒç√°st jm√©na souboru, kter√° p≈ôedch√°z√≠
                 jeho po≈ôadov√©mu ƒç√≠slu

Volby: 
  -h|--help     N√°povƒõda
  -f|--force
  -i|--indirect V√Ωsledekm zpracov√°n√≠ bude voln√Ω svazek
  -b|--bundle   V√Ωsledekm zpracov√°n√≠ bude kompaktn√≠ svazek ( default)
  -d|--dsed P≈ôi pr√°ci s textovou vrstvou se bude pracovat s form√°tem
              dsed (lisp)
  -x|--xml  P≈ôi pr√°ci s textovou vrstvou se bude pracovat s form√°tem
              xml

Parametrick√© volby:
   -n|--name    parametr zajist√≠, ≈æe se soubory p≈ôejmenuj√≠
   -r|--rename  ≈ôetƒõzec, kter√Ω se m√° pou≈æ√≠t k pojmenov√°n√≠ soubor≈Ø m√≠sto 
                st√°vaj√≠c√≠ch n√°zv≈Ø soubor≈Ø p≈ôi sestaven√≠ svazku 
                soubor_0000 - soubor_0001.djvu .. soubor_0123.djvu
                soubor_0 -    soubor_1.djvu ,, soubor_123.djvu

Rozbalen√≠ do voln√©ho svazku:

$0 [volby] dirname/ [index.djvu] [name] docin.djvu

    dirname/ - jm√©no adres√°≈ôe, kter√Ω nemus√≠ existovat
    docin.djvu - vstupn√≠ DjVu soubor (mus√≠ existovat)

Sbalen√≠ do svazku:

$0 [volby] index.djvu bundle.djvu

    bundle.djvu - jm√©no c√≠lov√©ho svazku (nemus√≠ existovat)

Vytvo≈ôen√≠ nov√©ho svazku:

$0 [volby] vzor docout.djvu

    vzor - nesm√≠ odpov√≠dat jm√©nu existuj√≠c√≠ho adres√°≈ôe nebo souboru
    docout.djvu - jm√©no c√≠lov√©ho djvu svazku (typ urƒçuje volba)
    -b - 
    -i - voln√Ω svazek
    -n - parametr zajist√≠, ≈æe se soubory p≈ôejmenuj√≠

Svazek sestavuje z djvu soubor≈Ø s n√°zvem vyhovuj√≠c√≠m vzorku. P≈ô√≠klad:

    $0 -i test novysoubor.djvu

Vyhled√° soubory test-1.djvu, test-2.djvu, ... a sestav√≠ do voln√©ho svazku
s indexov√Ωm souborem novysoubor.djvu.

Pokud je uveden parametr -n, budou d√≠lƒç√≠ dokumenty p≈ôejmenov√°ny tak, aby
odpov√≠daly n√°zvu svazku: novysoubor-001.djvu, novysoubor-002.djvu, ...

